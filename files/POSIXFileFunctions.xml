<?xml version="1.0"?>
<RBProject version="2008r5.1">
<block type="Module" ID="1880945459">
 <ObjName>POSIXFileFunctions</ObjName>
 <ObjContainerID>1044228147</ObjContainerID>
 <IsClass>0</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>unlink</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub unlink(d as DiskItem)</SourceLine>
   <SourceLine>#if targetLinux or targetMacOS</SourceLine>
   <SourceLine>soft declare function unlink lib libc (path as CString) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Attempt unlink(d.POSIXPath), "unlink"</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>d as DiskItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>symlink</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub symlink(source as DiskItem, target as DiskItem)</SourceLine>
   <SourceLine>#if targetLinux or targetMacOS</SourceLine>
   <SourceLine>soft declare function symlink lib libc (path1 as CString, path2 as CString) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Attempt symlink(source.POSIXPath, target.POSIXPath), "symlink"</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>source as DiskItem, target as DiskItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>link</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub link(source as DiskItem, target as DiskItem)</SourceLine>
   <SourceLine>#if targetLinux or targetMacOS</SourceLine>
   <SourceLine>soft declare function link lib libc (path1 as CString, path2 as CString) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Attempt link(source.POSIXPath, target.POSIXPath), "link"</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>source as DiskItem, target as DiskItem</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>libcErrorMessage</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function libcErrorMessage(code as Integer) As String</SourceLine>
   <SourceLine>#if targetLinux</SourceLine>
   <SourceLine>soft declare function strerror Lib libc (errcode as Integer)  as Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim errorMsg as MemoryBlock = strerror(code)</SourceLine>
   <SourceLine>if errorMsg &lt;&gt; nil then</SourceLine>
   <SourceLine>return DefineEncoding(errorMsg.CString(0), Encodings.SystemDefault)</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>//something bad has happened</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>code as Integer</ItemParams>
  <ItemResult>String</ItemResult>
 </Method>
 <Method>
  <ItemName>libcErrorCode</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function libcErrorCode() As Integer</SourceLine>
   <SourceLine>#if TargetLinux</SourceLine>
   <SourceLine>soft declare function libcErrorCode lib libc alias "__errno_location" () as Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim m as MemoryBlock = libcErrorCode()</SourceLine>
   <SourceLine>if m is nil then</SourceLine>
   <SourceLine>//something bad has happened</SourceLine>
   <SourceLine>return -1</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>return m.Long(0)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>Attempt</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Attempt(resultCode as Integer, methodName as String)</SourceLine>
   <SourceLine>if resultCode &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim errorCode as Integer = libcErrorCode</SourceLine>
   <SourceLine>dim errorMsg as String = libcErrorMessage(errorCode)</SourceLine>
   <SourceLine>raise new OSError(errorCode, "", ClassName + "." + methodName, "")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>resultCode as Integer, methodName as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>stat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub stat(d as DiskItem, ByRef s as statLinux)</SourceLine>
   <SourceLine>#if targetLinux</SourceLine>
   <SourceLine>soft declare function xstat lib libc alias "__xstat64" (ver as Int16, path as CString, ByRef s as statLinux) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>const STAT_VER_LINUX = 3</SourceLine>
   <SourceLine>dim result as Integer = xstat(STAT_VER_LINUX, d.POSIXPath, s)</SourceLine>
   <SourceLine>if result &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim errorCode as Integer = libcErrorCode</SourceLine>
   <SourceLine>dim errorMsg as String = libcErrorMessage(errorCode)</SourceLine>
   <SourceLine>raise new OSError(errorCode, errorMsg, "stat", "__xstat64")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>d as DiskItem, ByRef s as statLinux</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>mtime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function mtime(s as stat64BSD) As Date</SourceLine>
   <SourceLine>return MakeDate(s.st_mtime)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>s as stat64BSD</ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>stat</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub stat(d as DiskItem, ByRef s as stat64BSD)</SourceLine>
   <SourceLine>#if targetMacOS</SourceLine>
   <SourceLine>soft declare function xstat lib libc alias "stat64" ( path as CString, ByRef s as stat64BSD) as Integer</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim result as Integer = xstat(d.POSIXPath, s)</SourceLine>
   <SourceLine>if result &lt;&gt; 0 then</SourceLine>
   <SourceLine>dim errorCode as Integer = libcErrorCode</SourceLine>
   <SourceLine>dim errorMsg as String = libcErrorMessage(errorCode)</SourceLine>
   <SourceLine>raise new OSError(errorCode, errorMsg, "stat", "__xstat64")</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>d as DiskItem, ByRef s as stat64BSD</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>UnixEpoch</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function UnixEpoch() As Date</SourceLine>
   <SourceLine>dim d as new Date</SourceLine>
   <SourceLine>d.GMTOffset = 0.0</SourceLine>
   <SourceLine>d.SQLDateTime = "1970-01-01 00:00:00"</SourceLine>
   <SourceLine>return d</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams></ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>mtime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function mtime(s as statLinux) As Date</SourceLine>
   <SourceLine>return MakeDate(s.st_mtime)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>s as statLinux</ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>GetDate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function GetDate(unixSeconds as Integer) As Date</SourceLine>
   <SourceLine>dim d as new Date</SourceLine>
   <SourceLine>const SecondsinOneHour = 3600.0</SourceLine>
   <SourceLine>dim GMTOffset as Double = d.GMTOffset*SecondsinOneHour</SourceLine>
   <SourceLine>d.TotalSeconds = UnixEpoch.TotalSeconds + CType(unixSeconds, Double) + GMTOffset</SourceLine>
   <SourceLine>return d</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>unixSeconds as Integer</ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>mtime</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function mtime(f as DiskItem) As Date</SourceLine>
   <SourceLine>#if targetMacOS</SourceLine>
   <SourceLine>dim s as stat64BSD</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>#if targetLinux</SourceLine>
   <SourceLine>dim s as statLinux</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>stat f, s</SourceLine>
   <SourceLine>return mtime(s)</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>f as DiskItem</ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <Method>
  <ItemName>MakeDate</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function MakeDate(t as timespec) As Date</SourceLine>
   <SourceLine>dim d as new Date</SourceLine>
   <SourceLine>const SecondsinOneHour = 3600.0</SourceLine>
   <SourceLine>dim GMTOffset as Double = d.GMTOffset*SecondsinOneHour</SourceLine>
   <SourceLine>d.TotalSeconds = UnixEpoch.TotalSeconds + CType(t.tv_sec, Double) + GMTOffset</SourceLine>
   <SourceLine>return d</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <Shared>0</Shared>
  <ItemParams>t as timespec</ItemParams>
  <ItemResult>Date</ItemResult>
 </Method>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>2147483648</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <InheritsFrom>Object</InheritsFrom>
  </ViewProperty>
 </ViewBehavior>
 <Constant>
  <ItemName>libc</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>libc</ItemName>
  <ItemType>0</ItemType>
  <ItemDef></ItemDef>
  <ItemFlags>33</ItemFlags>
  <ConstantInstance>
   <ItemPlatform>5</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>/usr/lib/libc.so</ItemDef>
  </ConstantInstance>
  <ConstantInstance>
   <ItemPlatform>1</ItemPlatform>
   <ItemLanguage>0</ItemLanguage>
   <ItemDef>System.framework</ItemDef>
  </ConstantInstance>
 </Constant>
 <Constant>
  <ItemName>CarbonFramework</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>CarbonFramework</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>Carbon.framework</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Constant>
  <ItemName>ClassName</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>ClassName</ItemName>
  <ItemType>0</ItemType>
  <ItemDef>POSIXFileFunctions</ItemDef>
  <ItemFlags>33</ItemFlags>
 </Constant>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>statLinux</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>statLinux</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>st_dev as UInt64</SourceLine>
   <SourceLine>pad1 as UInt32</SourceLine>
   <SourceLine>st_ino as UInt32</SourceLine>
   <SourceLine>st_mode as UInt32</SourceLine>
   <SourceLine>st_nlink as Uint32</SourceLine>
   <SourceLine>st_uid as UInt32</SourceLine>
   <SourceLine>st_gid as UInt32</SourceLine>
   <SourceLine>st_rdev as UInt64</SourceLine>
   <SourceLine>pad2 as UInt32</SourceLine>
   <SourceLine>st_size as UInt64</SourceLine>
   <SourceLine>st_blksize as  UInt32</SourceLine>
   <SourceLine>st_blocks as UInt64</SourceLine>
   <SourceLine>st_atime as timespec</SourceLine>
   <SourceLine>st_mtime as timespec</SourceLine>
   <SourceLine>st_ctime as timespec</SourceLine>
   <SourceLine>st_ino64 as Uint64</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>timespec</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>timespec</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>tv_sec as Int32</SourceLine>
   <SourceLine>tv_nsec as Int32</SourceLine>
  </ItemSource>
 </Structure>
 <Structure>
  <TextEncoding>134217984</TextEncoding>
  <ItemName>stat64BSD</ItemName>
  <ItemFlags>0</ItemFlags>
  <ItemName>stat64BSD</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>st_dev as UInt32</SourceLine>
   <SourceLine>st_mode as UInt16</SourceLine>
   <SourceLine>st_nlink as UInt16</SourceLine>
   <SourceLine>st_ino as UInt64</SourceLine>
   <SourceLine>st_uid as UInt32</SourceLine>
   <SourceLine>st_gid as UInt32</SourceLine>
   <SourceLine>st_rdev as UInt32</SourceLine>
   <SourceLine>st_atime as timespec</SourceLine>
   <SourceLine>st_mtime as timespec</SourceLine>
   <SourceLine>st_ctime as timespec</SourceLine>
   <SourceLine>st_birthtimespec as timespec</SourceLine>
   <SourceLine>st_size as Int64</SourceLine>
   <SourceLine>st_blocks as Int64</SourceLine>
   <SourceLine>st_blksize as Int32</SourceLine>
   <SourceLine>st_flags as Uint32</SourceLine>
   <SourceLine>st_gen as UInt32</SourceLine>
   <SourceLine>st_lspare as Int32</SourceLine>
   <SourceLine>st_qspare(1) as Int64</SourceLine>
  </ItemSource>
 </Structure>
</block>
</RBProject>
